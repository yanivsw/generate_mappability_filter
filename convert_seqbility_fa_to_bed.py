# This script can be used to convert a masked FASTA file generated by Heng Li's
# SNPable regions tool https://lh3lh3.users.sourceforge.net/snpable.shtml
# to a BED file containing the positions of the upper case sequences.

import pandas as pd
import re
import sys

in_fasta_loc = sys.argv[1]
out_bed_loc = sys.argv[2]

# Read the FASTA file
with open(in_fasta_loc, 'r') as file:
    data  = file.read()

# Split the data into sequences, ignoring the first empty entry
split_fasta = data.split('>')[1:]

# List of expected chromosomes
if 'chr' in split_fasta[0].split('\n', 1)[0]:
    chromosomes = ['chr' + str(i) for i in range(1,23)] + ['chrX', 'chrY']
else:
    chromosomes = [str(i) for i in range(1,23)] + ['X', 'Y']

res = []

# Process each chromosome sequence
for chrom_str in split_fasta:
    chrom_data = chrom_str.split('\n',1)
    chrom = chrom_data[0]

    if chrom not in chromosomes:
        print('skip sequence' + chrom)
        continue

    print(chrom)

    # Remove newlines from sequence data and find all upper (unmasked) and lower (masked) case sequences
    seq_data = chrom_data[1].replace('\n', '')
    seq_upper_lower = re.findall('[a-z][^A-Z]*|[A-Z][^a-z]*', seq_data)
    start_pos = 0

    # Save the positions of the upper case sequences to results
    for seq in seq_upper_lower:
        seq_len = len(seq)
        if seq.isupper():
            res.append([chrom, start_pos, start_pos + seq_len])
        start_pos += seq_len

# Write results to BED file
res_df = pd.DataFrame(res)
res_df[[0, 1, 2]].to_csv(out_bed_loc, sep='\t', index=None, header=None)
